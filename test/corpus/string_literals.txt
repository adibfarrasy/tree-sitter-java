================================================================================
simple string literal
================================================================================
"hello world";
--------------------------------------------------------------------------------

(source_file
  (expression_statement
    (string_literal
      (string_fragment))))

================================================================================
empty string literal
================================================================================
"";
--------------------------------------------------------------------------------

(source_file
  (expression_statement
    (string_literal)))

================================================================================
string with escape sequences
================================================================================
"hello\nworld\t!";
--------------------------------------------------------------------------------

(source_file
  (expression_statement
    (string_literal
      (string_fragment)
      (escape_sequence)
      (string_fragment)
      (escape_sequence)
      (string_fragment))))

================================================================================
string with quotes
================================================================================
"She said \"hello\"";
--------------------------------------------------------------------------------

(source_file
  (expression_statement
    (string_literal
      (string_fragment)
      (escape_sequence)
      (string_fragment)
      (escape_sequence))))

================================================================================
string with backslash
================================================================================
"path\\to\\file";
--------------------------------------------------------------------------------

(source_file
  (expression_statement
    (string_literal
      (string_fragment)
      (escape_sequence)
      (string_fragment)
      (escape_sequence)
      (string_fragment))))

================================================================================
string with unicode escape
================================================================================
"\u0048\u0065\u006c\u006c\u006f";
--------------------------------------------------------------------------------

(source_file
  (expression_statement
    (string_literal
      (escape_sequence)
      (escape_sequence)
      (escape_sequence)
      (escape_sequence)
      (escape_sequence))))

================================================================================
string with octal escape
================================================================================
"\101\102\103";
--------------------------------------------------------------------------------

(source_file
  (expression_statement
    (string_literal
      (escape_sequence)
      (escape_sequence)
      (escape_sequence))))

================================================================================
character literal
================================================================================
'a';
--------------------------------------------------------------------------------

(source_file
  (expression_statement
    (character_literal)))

================================================================================
character with escape
================================================================================
'\n';
--------------------------------------------------------------------------------

(source_file
  (expression_statement
    (character_literal)))

================================================================================
character with unicode escape
================================================================================
'\u0041';
--------------------------------------------------------------------------------

(source_file
  (expression_statement
    (character_literal)))

================================================================================
long string literal
================================================================================
"This is a very long string that spans multiple characters and contains various special characters like !@#$%^&*()_+{}|:<>?[]";
--------------------------------------------------------------------------------

(source_file
  (expression_statement
    (string_literal
      (string_fragment))))

================================================================================
string concatenation
================================================================================
"hello" + " " + "world";
--------------------------------------------------------------------------------

(source_file
  (expression_statement
    (binary_expression
      left: (binary_expression
        left: (string_literal
          (string_fragment))
        right: (string_literal
          (string_fragment)))
      right: (string_literal
        (string_fragment)))))

================================================================================
text block (Java 15+)
================================================================================
"""
    Hello
    World
    """;
--------------------------------------------------------------------------------

(source_file
  (expression_statement
    (string_literal
      (multiline_string_fragment))))